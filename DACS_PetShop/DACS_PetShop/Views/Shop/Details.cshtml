@model DACS_PetShop.Models.Product

@{
    ViewData["Title"] = "Chi tiết sản phẩm";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="row">
    <div class="col-md-6">
        <!-- Hiển thị tất cả ảnh của sản phẩm -->
        <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                @if (Model.ProductImages != null && Model.ProductImages.Any())
                {
                    var first = true;
                    foreach (var image in Model.ProductImages)
                    {
                        <div class="carousel-item @(first ? "active" : "")">
                            <img src="@image.ImageUrl" class="d-block w-100 img-fluid" alt="@Model.Name" />
                        </div>
                        first = false;
                    }
                }
                else
                {
                    <div class="carousel-item active">
                        <img src="/images/placeholder.jpg" class="d-block w-100 img-fluid" alt="Placeholder" />
                    </div>
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>

        <!-- Thẻ mô tả và đánh giá -->
        <div class="description-reviews card mt-3">
            <div class="card-body">
                <h4>Mô tả sản phẩm</h4>
                <p>@(string.IsNullOrEmpty(Model.Description) ? "Chưa có mô tả." : Model.Description)</p>

                <h4>Đánh giá</h4>
                <div class="mb-3">
                    <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#reviewModal">
                        Đánh giá sản phẩm
                    </button>
                </div>
                @if (Model.Reviews != null && Model.Reviews.Any())
                {
                    var averageRating = Model.Reviews.Average(r => r.Rating);
                    <p>
                        Điểm trung bình: @averageRating.ToString("0.0")/5
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= averageRating)
                            {
                                <i class="fas fa-star text-warning"></i>
                            }
                            else
                            {
                                <i class="far fa-star text-warning"></i>
                            }
                        }
                        (@Model.Reviews.Count đánh giá)
                    </p>
                    <ul>
                        @foreach (var review in Model.Reviews)
                        {
                            <li>
                                <strong>Điểm: @review.Rating/5</strong>
                                <p>@review.Comment</p>
                                <small>Đăng bởi: @(review.UserId ?? "Ẩn danh") - @review.CreatedAt.ToString("dd/MM/yyyy")</small>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>Chưa có đánh giá nào.</p>
                }
            </div>
        </div>
    </div>

    <div class="col-md-6 product-details">
        <h2>@Model.Name</h2>
        <p><strong>Thương hiệu:</strong> @Model.Brand?.Name</p>
        <p><strong>Danh mục:</strong> @Model.Category?.Name</p>

        <!-- Chọn kích thước và số lượng -->
        <h4>Kích thước và giá:</h4>
        <form asp-action="AddToCart" asp-controller="Cart" method="post">
            <input type="hidden" name="productId" value="@Model.ProductId" />
            <div class="mb-3">
                @if (Model.ProductSizes != null && Model.ProductSizes.Any())
                {
                    <div class="d-flex flex-wrap">
                        @foreach (var size in Model.ProductSizes.OrderBy(ps => ps.SizeId))
                        {
                            <div class="form-check me-3">
                                <input class="form-check-input size-option" type="radio" name="sizeId" id="size-@size.SizeId"
                                       value="@size.SizeId" required data-stock="@size.StockQuantity"
                                @(size == Model.ProductSizes.First() ? "checked" : "") />
                                <label class="form-check-label" for="size-@size.SizeId">
                                    @size.Size.Name: <span class="price">@size.Price.ToString("#,##0")đ</span>
                                    (Còn: @size.StockQuantity)
                                </label>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p>Chưa có kích thước nào.</p>
                }
            </div>

            <!-- Chọn số lượng -->
            <div class="mb-3">
                <label for="quantity" class="form-label">Số lượng:</label>
                <input type="number" class="form-control" id="quantity" name="quantity" min="1"
                       max="@(Model.ProductSizes?.FirstOrDefault()?.StockQuantity ?? 0)"
                       value="1" required />
                <small class="text-muted">Tối đa: <span id="max-quantity">@(Model.ProductSizes?.FirstOrDefault()?.StockQuantity ?? 0)</span></small>
            </div>

            <button type="submit" class="btn btn-primary">Thêm vào giỏ</button>
        </form>
    </div>
</div>

<!-- Modal đánh giá sản phẩm -->
<div class="modal fade" id="reviewModal" tabindex="-1" aria-labelledby="reviewModalLabel" aria-hidden="5">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reviewModalLabel">Đánh giá sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="AddReview" asp-controller="Shop" method="post">
                    <input type="hidden" name="productId" value="@Model.ProductId" />
                    <div class="mb-3">
                        <label for="rating" class="form-label">Điểm đánh giá (1-5):</label>
                        <select class="form-control" id="rating" name="rating" required>
                            <option value="">Chọn điểm</option>
                            <option value="1">1 sao</option>
                            <option value="2">2 sao</option>
                            <option value="3">3 sao</option>
                            <option value="4">4 sao</option>
                            <option value="5">5 sao</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="comment" class="form-label">Bình luận:</label>
                        <textarea class="form-control" id="comment" name="comment" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="userId" class="form-label">Tên người dùng (hoặc để trống để ẩn danh):</label>
                        <input type="text" class="form-control" id="userId" name="userId" />
                    </div>
                    <button type="submit" class="btn btn-primary">Gửi đánh giá</button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    /* Reset và kiểu chung */
    body {
        background-color: #f5f5f5; /* Nền sáng (xám nhạt) */
        color: #333; /* Chữ màu đen nhạt */
        font-family: Arial, sans-serif;
    }

    h1, h2, h4, h5 {
        color: #333; /* Tiêu đề màu đen nhạt */
    }

    /* Container chính */
    .row {
        margin: 0;
        padding: 20px;
    }

    /* Carousel ảnh */
    .carousel-item img {
        max-height: 400px; /* Giới hạn chiều cao ảnh trong carousel */
        object-fit: contain; /* Giữ tỷ lệ ảnh */
    }

    .img-fluid {
        background-color: #fff; /* Nền trắng cho hình ảnh */
        padding: 10px;
        border: 1px solid #ddd; /* Viền xám nhạt */
        border-radius: 8px;
    }

    /* Thẻ mô tả và đánh giá */
    .description-reviews {
        background-color: #fff; /* Nền trắng */
        border: 1px solid #ddd; /* Viền xám nhạt */
        border-radius: 8px;
    }

        .description-reviews .card-body {
            padding: 20px;
        }

        .description-reviews h4 {
            font-size: 1.2rem;
            margin-bottom: 10px;
        }

        .description-reviews p {
            font-size: 1rem;
            color: #555; /* Màu chữ nhạt hơn */
            margin-bottom: 15px;
        }

        .description-reviews ul {
            list-style: none;
            padding: 0;
        }

            .description-reviews ul li {
                margin-bottom: 15px;
                padding-bottom: 10px;
                border-bottom: 1px solid #eee; /* Đường kẻ phân cách giữa các đánh giá */
            }

                .description-reviews ul li strong {
                    color: #333;
                }

                .description-reviews ul li p {
                    margin: 5px 0;
                }

                .description-reviews ul li small {
                    color: #888; /* Màu xám cho thông tin người đăng */
                }

    /* Chi tiết sản phẩm */
    .product-details {
        padding: 20px;
        background-color: #fff; /* Nền trắng */
        border: 1px solid #ddd; /* Viền xám nhạt */
        border-radius: 8px;
    }

        .product-details h2 {
            font-size: 1.8rem;
            margin-bottom: 15px;
        }

        .product-details p {
            font-size: 1rem;
            color: #555; /* Màu chữ nhạt hơn */
            margin-bottom: 10px;
        }

            .product-details p strong {
                color: #333; /* Màu đậm hơn cho nhãn */
            }

        .product-details h4 {
            font-size: 1.2rem;
            margin-top: 20px;
            margin-bottom: 10px;
        }

        .product-details .form-check {
            margin-bottom: 10px;
        }

        .product-details .form-check-input {
            margin-right: 8px;
        }

        .product-details .form-check-label {
            font-size: 1rem;
            color: #555;
        }

        .product-details .price {
            color: #e63946; /* Màu giá đỏ nhạt */
            font-weight: bold;
        }

        .product-details .form-control {
            width: 100px; /* Giới hạn chiều rộng của input số lượng */
            display: inline-block;
        }

    .btn-primary {
        background-color: #007bff;
        border: none;
        padding: 10px 20px;
        font-size: 1rem;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-outline-primary {
        border-color: #007bff;
        color: #007bff;
    }

        .btn-outline-primary:hover {
            background-color: #007bff;
            color: #fff;
        }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Cập nhật số lượng tối đa khi thay đổi kích thước
        document.querySelectorAll('.size-option').forEach(function (radio) {
            radio.addEventListener('change', function () {
                var stock = parseInt(this.getAttribute('data-stock'));
                var quantityInput = document.getElementById('quantity');
                var maxQuantitySpan = document.getElementById('max-quantity');

                // Cập nhật giá trị tối đa cho input số lượng
                quantityInput.setAttribute('max', stock);
                maxQuantitySpan.textContent = stock;

                // Nếu số lượng hiện tại vượt quá tồn kho, đặt lại về 1
                if (parseInt(quantityInput.value) > stock) {
                    quantityInput.value = 1;
                }
            });
        });

        // Đảm bảo số lượng không vượt quá tồn kho khi người dùng nhập tay
        document.getElementById('quantity').addEventListener('input', function () {
            var max = parseInt(this.getAttribute('max'));
            if (this.value > max) {
                this.value = max;
            }
            if (this.value < 1) {
                this.value = 1;
            }
        });
    </script>
}