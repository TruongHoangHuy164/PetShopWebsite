@model DACS_PetShop.Models.Cart

@{
    ViewData["Title"] = "Giỏ hàng";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

<h1>Giỏ hàng</h1>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (Model.CartItems != null && Model.CartItems.Any())
{
    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <thead class="table-light">
                <tr>
                    <th>Sản phẩm</th>
                    <th>Kích thước</th>
                    <th>Đơn giá</th>
                    <th>Số lượng</th>
                    <th>Tổng</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.CartItems)
                {
                    var productSize = item.Product.ProductSizes.FirstOrDefault(ps => ps.SizeId == item.SizeId);
                    <tr>
                        <td>
                            <div class="d-flex align-items-center">
                                @if (item.Product.ProductImages != null && item.Product.ProductImages.Any())
                                {
                                    var mainImage = item.Product.ProductImages.FirstOrDefault(img => img.IsMainImage) ?? item.Product.ProductImages.First();
                                    <img src="@mainImage.ImageUrl" alt="@item.Product.Name" class="img-fluid me-2" style="width: 50px; height: 50px; object-fit: contain;" />
                                }
                                <span>@item.Product.Name</span>
                            </div>
                        </td>
                        <td>@item.Size.Name</td>
                        <td>@productSize.Price.ToString("#,##0")đ</td>
                        <td>@item.Quantity</td>
                        <td>@(item.Quantity * productSize.Price).ToString("#,##0")đ</td>
                        <td>
                            <form asp-action="RemoveFromCart" asp-controller="Cart" method="post" class="d-inline">
                                <input type="hidden" name="cartItemId" value="@item.CartItemId" />
                                <button type="submit" class="btn btn-danger btn-sm">
                                    <i class="fas fa-trash"></i> Xóa
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="text-end mt-4">
        <h4>Tổng cộng: @Model.CartItems.Sum(ci => ci.Quantity * ci.Product.ProductSizes.First(ps => ps.SizeId == ci.SizeId).Price).ToString("#,##0")đ</h4>
        <a asp-action="Checkout" asp-controller="Order" class="btn btn-primary mt-2">
            <i class="fas fa-credit-card"></i> Thanh toán
        </a>
    </div>
}
else
{
    <div class="alert alert-info text-center">
        <i class="fas fa-shopping-cart me-2"></i> Giỏ hàng của bạn đang trống.
        <a asp-controller="Shop" asp-action="Index" class="btn btn-outline-primary mt-3">Tiếp tục mua sắm</a>
    </div>
}

<style>
    body {
        background-color: #f5f5f5;
        color: #333;
        font-family: Arial, sans-serif;
    }

    h1 {
        color: #333;
        margin-bottom: 20px;
    }

    .table {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
    }

        .table th, .table td {
            vertical-align: middle;
            padding: 12px;
        }

        .table img {
            border: 1px solid #ddd;
            border-radius: 4px;
        }

    .btn-primary {
        background-color: #007bff;
        border: none;
        padding: 10px 20px;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-danger {
        background-color: #dc3545;
        border: none;
    }

        .btn-danger:hover {
            background-color: #c82333;
        }

    .alert-info {
        background-color: #e7f3fe;
        border-color: #b6d4fe;
        color: #084298;
        padding: 20px;
        border-radius: 8px;
    }

        .alert-info .btn-outline-primary {
            color: #007bff;
            border-color: #007bff;
        }

            .alert-info .btn-outline-primary:hover {
                background-color: #007bff;
                color: #fff;
            }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Cập nhật số lượng giỏ hàng sau khi xóa
        document.querySelectorAll('form[action="@Url.Action("RemoveFromCart", "Cart")"]').forEach(form => {
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                var formData = new FormData(this);

                fetch(this.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                    .then(response => {
                        if (response.redirected) {
                            window.location.href = response.url;
                        } else {
                            return response.json();
                        }
                    })
                    .then(data => {
                        // Cập nhật badge giỏ hàng
                        fetch('@Url.Action("GetCartCount", "Cart")')
                            .then(res => res.json())
                            .then(cartData => {
                                document.getElementById('cart-count').textContent = cartData.cartCount || 0;
                            });
                    })
                    .catch(error => {
                        console.error('Lỗi khi xóa mục khỏi giỏ hàng:', error);
                    });
            });
        });
    </script>
}